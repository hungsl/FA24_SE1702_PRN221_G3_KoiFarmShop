// <auto-generated />
using System;
using KoiFarmShop.Infrastructure.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KoiFarmShop.Infrastructure.DB.Migrations
{
    [DbContext(typeof(KVSCContext))]
    [Migration("20241030131523_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AcceptedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ComboServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PetServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComboServiceId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PetId");

                    b.HasIndex("PetServiceId");

                    b.ToTable("Appointment", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            AppointmentDate = new DateTime(2024, 11, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6547),
                            CustomerId = new Guid("dd0e9f37-d587-401d-932e-7f098eb60b3e"),
                            IsDeleted = false,
                            PetId = new Guid("f1111111-1111-1111-1111-111111111111"),
                            PetServiceId = new Guid("f6a59f70-c0db-45b4-a598-045a005d42ed"),
                            Status = "Pending"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            AppointmentDate = new DateTime(2024, 11, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6554),
                            CustomerId = new Guid("dd0e9f37-d587-401d-932e-7f098eb60b3e"),
                            IsDeleted = false,
                            PetId = new Guid("f1111111-1111-1111-1111-111111111111"),
                            PetServiceId = new Guid("f6a59f70-c0db-45b4-a598-045a005d42ed"),
                            Status = "Waiting"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            AppointmentDate = new DateTime(2024, 11, 2, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6561),
                            CustomerId = new Guid("45a9dc1c-fb8a-4607-9a7e-d6b1359384d7"),
                            IsDeleted = false,
                            PetId = new Guid("f3333333-3333-3333-3333-333333333333"),
                            PetServiceId = new Guid("2d95b900-9b04-4f6f-94ec-7d47d2a89ec8"),
                            Status = "Pending"
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            AppointmentDate = new DateTime(2024, 11, 3, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6565),
                            CustomerId = new Guid("bca84e29-de4d-475b-a3ad-a02e937efa14"),
                            IsDeleted = false,
                            PetServiceId = new Guid("7d80bd0a-7780-4c4c-981b-48d7f8784405"),
                            Status = "Waiting"
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            AppointmentDate = new DateTime(2024, 11, 5, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6570),
                            CustomerId = new Guid("b59d5d37-53d8-4cb6-98ed-520f49eafa73"),
                            IsDeleted = false,
                            PetServiceId = new Guid("f6a59f70-c0db-45b4-a598-045a005d42ed"),
                            Status = "Waiting"
                        },
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-666666666666"),
                            AppointmentDate = new DateTime(2024, 11, 6, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6578),
                            CustomerId = new Guid("5f28fcb6-675b-4f97-a925-01ac8c68b5ac"),
                            IsDeleted = false,
                            PetServiceId = new Guid("7d80bd0a-7780-4c4c-981b-48d7f8784405"),
                            Status = "InProgress"
                        },
                        new
                        {
                            Id = new Guid("77777777-7777-7777-7777-777777777777"),
                            AppointmentDate = new DateTime(2024, 11, 8, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6583),
                            CustomerId = new Guid("0d1fbbab-a175-4d90-8291-d5d96ebb9359"),
                            IsDeleted = false,
                            PetServiceId = new Guid("2d95b900-9b04-4f6f-94ec-7d47d2a89ec8"),
                            Status = "InProgress"
                        },
                        new
                        {
                            Id = new Guid("88888888-8888-8888-8888-888888888888"),
                            AppointmentDate = new DateTime(2024, 11, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            CompletedDate = new DateTime(2024, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6590),
                            CustomerId = new Guid("dd0e9f37-d587-401d-932e-7f098eb60b3e"),
                            IsDeleted = false,
                            PetServiceId = new Guid("7d80bd0a-7780-4c4c-981b-48d7f8784405"),
                            Status = "Reported"
                        },
                        new
                        {
                            Id = new Guid("99999999-9999-9999-9999-999999999999"),
                            AppointmentDate = new DateTime(2024, 11, 12, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            CompletedDate = new DateTime(2024, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6595),
                            CustomerId = new Guid("45a9dc1c-fb8a-4607-9a7e-d6b1359384d7"),
                            IsDeleted = false,
                            PetServiceId = new Guid("f6a59f70-c0db-45b4-a598-045a005d42ed"),
                            Status = "Reported"
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            AppointmentDate = new DateTime(2024, 11, 7, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            CompletedDate = new DateTime(2024, 11, 7, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6599),
                            CustomerId = new Guid("bca84e29-de4d-475b-a3ad-a02e937efa14"),
                            IsDeleted = false,
                            PetServiceId = new Guid("2d95b900-9b04-4f6f-94ec-7d47d2a89ec8"),
                            Status = "Completed"
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            AppointmentDate = new DateTime(2024, 11, 9, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            CompletedDate = new DateTime(2024, 11, 9, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6604),
                            CustomerId = new Guid("b59d5d37-53d8-4cb6-98ed-520f49eafa73"),
                            IsDeleted = false,
                            PetServiceId = new Guid("f6a59f70-c0db-45b4-a598-045a005d42ed"),
                            Status = "Completed"
                        });
                });

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.AppointmentVeterinarian", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppointmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VeterinarianId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("VeterinarianId");

                    b.ToTable("AppointmentVeterinarian");
                });

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.ComboService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ComboService", (string)null);
                });

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.ComboServiceItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComboServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PetServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ComboServiceId");

                    b.HasIndex("PetServiceId");

                    b.ToTable("ComboServiceItem", (string)null);
                });

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SystemTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.Pet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HealthStatus")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastHealthCheck")
                        .HasColumnType("datetime2");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Pet", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f1111111-1111-1111-1111-111111111111"),
                            Age = 3,
                            Color = "Orange and White",
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6879),
                            Gender = "Male",
                            HealthStatus = 1,
                            ImageUrl = "https://example.com/koi1.jpg",
                            IsDeleted = false,
                            LastHealthCheck = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Length = 35.0,
                            Name = "Koi Fish 1",
                            Note = "Healthy with vibrant colors.",
                            OwnerId = new Guid("dd0e9f37-d587-401d-932e-7f098eb60b3e"),
                            Quantity = 5,
                            Weight = 2.0
                        },
                        new
                        {
                            Id = new Guid("f2222222-2222-2222-2222-222222222222"),
                            Age = 4,
                            Color = "Red and White",
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6887),
                            Gender = "Female",
                            HealthStatus = 2,
                            ImageUrl = "https://example.com/koi2.jpg",
                            IsDeleted = false,
                            LastHealthCheck = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Length = 40.0,
                            Name = "Koi Fish 2",
                            Note = "Slight issue with fins, under observation.",
                            OwnerId = new Guid("dd0e9f37-d587-401d-932e-7f098eb60b3e"),
                            Quantity = 3,
                            Weight = 3.0
                        },
                        new
                        {
                            Id = new Guid("f3333333-3333-3333-3333-333333333333"),
                            Age = 2,
                            Color = "Yellow and White",
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6893),
                            Gender = "Male",
                            HealthStatus = 1,
                            ImageUrl = "https://example.com/koi3.jpg",
                            IsDeleted = false,
                            LastHealthCheck = new DateTime(2024, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Length = 32.0,
                            Name = "Koi Fish 3",
                            Note = "In great condition, regular feeding.",
                            OwnerId = new Guid("dd0e9f37-d587-401d-932e-7f098eb60b3e"),
                            Quantity = 10,
                            Weight = 2.0
                        },
                        new
                        {
                            Id = new Guid("f4444444-4444-4444-4444-444444444444"),
                            Age = 1,
                            Color = "Black and White",
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6898),
                            Gender = "Female",
                            HealthStatus = 1,
                            ImageUrl = "https://example.com/koi4.jpg",
                            IsDeleted = false,
                            LastHealthCheck = new DateTime(2024, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Length = 25.0,
                            Name = "Koi Fish 4",
                            Note = "Newly purchased, adjusting to pond.",
                            OwnerId = new Guid("dd0e9f37-d587-401d-932e-7f098eb60b3e"),
                            Quantity = 7,
                            Weight = 3.0
                        },
                        new
                        {
                            Id = new Guid("f5555555-5555-5555-5555-555555555555"),
                            Age = 5,
                            Color = "Blue and White",
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6903),
                            Gender = "Male",
                            HealthStatus = 1,
                            ImageUrl = "https://example.com/koi5.jpg",
                            IsDeleted = false,
                            LastHealthCheck = new DateTime(2024, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Length = 45.0,
                            Name = "Koi Fish 5",
                            Note = "Strong swimmer, excellent condition.",
                            OwnerId = new Guid("0d1fbbab-a175-4d90-8291-d5d96ebb9359"),
                            Quantity = 2,
                            Weight = 3.0
                        },
                        new
                        {
                            Id = new Guid("f6666666-6666-6666-6666-666666666666"),
                            Age = 2,
                            Color = "White",
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6909),
                            Gender = "Female",
                            HealthStatus = 1,
                            ImageUrl = "https://example.com/koi6.jpg",
                            IsDeleted = false,
                            LastHealthCheck = new DateTime(2024, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Length = 28.0,
                            Name = "Koi Fish 6",
                            Note = "Excellent appetite, feeding well.",
                            OwnerId = new Guid("dd0e9f37-d587-401d-932e-7f098eb60b3e"),
                            Quantity = 4,
                            Weight = 2.0
                        });
                });

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.PetService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AvailableFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AvailableTo")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MaxNumberOfPets")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PetServiceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TravelCost")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PetServiceCategoryId");

                    b.ToTable("PetService", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f6a59f70-c0db-45b4-a598-045a005d42ed"),
                            AvailableFrom = new DateTime(2024, 10, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            AvailableTo = new DateTime(2024, 10, 31, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            BasePrice = 150.00m,
                            CreatedDate = new DateTime(2024, 10, 30, 20, 15, 21, 907, DateTimeKind.Local).AddTicks(7025),
                            Description = "Provides immediate care for critical conditions in Koi fish.",
                            Duration = "3 hours",
                            ImageUrl = "https://example.com/image7.jpg",
                            IsDeleted = false,
                            MaxNumberOfPets = 0,
                            Name = "Emergency Care",
                            PetServiceCategoryId = new Guid("3d3bb172-c3d0-4d0f-ac50-713708bc6498"),
                            TravelCost = 30.00m
                        },
                        new
                        {
                            Id = new Guid("7d80bd0a-7780-4c4c-981b-48d7f8784405"),
                            AvailableFrom = new DateTime(2024, 10, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            AvailableTo = new DateTime(2024, 10, 31, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            BasePrice = 100.00m,
                            CreatedDate = new DateTime(2024, 10, 30, 20, 15, 21, 907, DateTimeKind.Local).AddTicks(7032),
                            Description = "A specialized treatment to remove and prevent parasites in Koi.",
                            Duration = "2 hours",
                            ImageUrl = "https://example.com/image5.jpg",
                            IsDeleted = false,
                            MaxNumberOfPets = 0,
                            Name = "Parasite Treatment",
                            PetServiceCategoryId = new Guid("da91046c-71d1-429b-ade3-5e8ff9f701a6"),
                            TravelCost = 25.00m
                        },
                        new
                        {
                            Id = new Guid("2d95b900-9b04-4f6f-94ec-7d47d2a89ec8"),
                            AvailableFrom = new DateTime(2024, 10, 3, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            AvailableTo = new DateTime(2024, 10, 25, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            BasePrice = 20.00m,
                            CreatedDate = new DateTime(2024, 10, 30, 20, 15, 21, 907, DateTimeKind.Local).AddTicks(7072),
                            Description = "Ensures optimal water conditions for Koi health and growth.",
                            Duration = "45 minutes",
                            ImageUrl = "https://example.com/image3.jpg",
                            IsDeleted = false,
                            MaxNumberOfPets = 0,
                            Name = "Water Quality Testing",
                            PetServiceCategoryId = new Guid("75efc332-0e1b-4d35-a609-4897d83c173e"),
                            TravelCost = 5.00m
                        },
                        new
                        {
                            Id = new Guid("39ebc58b-6731-491d-949d-82f387dce82e"),
                            AvailableFrom = new DateTime(2024, 10, 3, 22, 10, 20, 0, DateTimeKind.Unspecified),
                            AvailableTo = new DateTime(2024, 10, 4, 2, 10, 20, 0, DateTimeKind.Unspecified),
                            BasePrice = 29.99m,
                            CreatedDate = new DateTime(2024, 10, 30, 20, 15, 21, 907, DateTimeKind.Local).AddTicks(7078),
                            Description = "A convenient feeding service ensuring proper diet and nutrition.",
                            Duration = "30 minutes",
                            ImageUrl = "https://example.com/image.jpg",
                            IsDeleted = false,
                            MaxNumberOfPets = 0,
                            Name = "Koi Feeding Service",
                            PetServiceCategoryId = new Guid("a5e47a8f-f6e1-4c7a-8955-4a928744f9bf"),
                            TravelCost = 10.00m
                        },
                        new
                        {
                            Id = new Guid("33e71556-d924-4101-bd1f-8707ca0e6f87"),
                            AvailableFrom = new DateTime(2024, 10, 5, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            AvailableTo = new DateTime(2024, 10, 20, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            BasePrice = 30.00m,
                            CreatedDate = new DateTime(2024, 10, 30, 20, 15, 21, 907, DateTimeKind.Local).AddTicks(7084),
                            Description = "Scheduled feeding for Koi with premium quality fish food.",
                            Duration = "1 hour",
                            ImageUrl = "https://example.com/image2.jpg",
                            IsDeleted = false,
                            MaxNumberOfPets = 0,
                            Name = "Koi Feeding Service",
                            PetServiceCategoryId = new Guid("fe3df183-1f42-4301-a1fb-35e6211c8816"),
                            TravelCost = 15.00m
                        },
                        new
                        {
                            Id = new Guid("2d547de7-d7a0-4c27-a26c-9cf3a7099817"),
                            AvailableFrom = new DateTime(2024, 10, 10, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            AvailableTo = new DateTime(2024, 10, 15, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            BasePrice = 75.00m,
                            CreatedDate = new DateTime(2024, 10, 30, 20, 15, 21, 907, DateTimeKind.Local).AddTicks(7090),
                            Description = "Treats and prevents fungal infections in Koi fish.",
                            Duration = "1.5 hours",
                            ImageUrl = "https://example.com/image4.jpg",
                            IsDeleted = false,
                            MaxNumberOfPets = 0,
                            Name = "Fungal Treatment",
                            PetServiceCategoryId = new Guid("a5e47a8f-f6e1-4c7a-8955-4a928744f9bf"),
                            TravelCost = 20.00m
                        },
                        new
                        {
                            Id = new Guid("8c0ce681-03e2-4ed8-83b2-abc3db694c5b"),
                            AvailableFrom = new DateTime(2024, 10, 3, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            AvailableTo = new DateTime(2024, 10, 28, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            BasePrice = 40.00m,
                            CreatedDate = new DateTime(2024, 10, 30, 20, 15, 21, 907, DateTimeKind.Local).AddTicks(7095),
                            Description = "Provides essential knowledge for Koi fish care and maintenance.",
                            Duration = "1 hour",
                            ImageUrl = "https://example.com/image8.jpg",
                            IsDeleted = false,
                            MaxNumberOfPets = 0,
                            Name = "Educational Workshops",
                            PetServiceCategoryId = new Guid("15c55a94-06fb-4dac-8b32-7c1d7af085a3"),
                            TravelCost = 12.00m
                        },
                        new
                        {
                            Id = new Guid("7253ea62-e419-40dc-bc70-e069611587dd"),
                            AvailableFrom = new DateTime(2024, 10, 4, 14, 2, 32, 0, DateTimeKind.Unspecified),
                            AvailableTo = new DateTime(2024, 11, 3, 14, 2, 32, 0, DateTimeKind.Unspecified),
                            BasePrice = 1.00m,
                            CreatedDate = new DateTime(2024, 10, 30, 20, 15, 21, 907, DateTimeKind.Local).AddTicks(7102),
                            Description = "Sample service description.",
                            Duration = "string",
                            ImageUrl = "string",
                            IsDeleted = false,
                            MaxNumberOfPets = 0,
                            Name = "string",
                            PetServiceCategoryId = new Guid("83d70177-2e40-49c9-a0bf-27ce80cce340"),
                            TravelCost = 0.00m
                        },
                        new
                        {
                            Id = new Guid("c33e3a86-0230-468b-8c06-ee91b7e8cc21"),
                            AvailableFrom = new DateTime(2024, 10, 5, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            AvailableTo = new DateTime(2024, 10, 30, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            BasePrice = 60.00m,
                            CreatedDate = new DateTime(2024, 10, 30, 20, 15, 21, 907, DateTimeKind.Local).AddTicks(7107),
                            Description = "Regular maintenance to keep your Koi pond in optimal condition.",
                            Duration = "1 hour",
                            ImageUrl = "https://example.com/image6.jpg",
                            IsDeleted = false,
                            MaxNumberOfPets = 0,
                            Name = "Pond Maintenance",
                            PetServiceCategoryId = new Guid("82b86176-d076-4576-b0f3-60220ca3e5ba"),
                            TravelCost = 15.00m
                        });
                });

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.PetServiceCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicableTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PetServiceCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("83d70177-2e40-49c9-a0bf-27ce80cce340"),
                            ApplicableTo = "Koi Fish",
                            CreatedDate = new DateTime(2024, 10, 30, 20, 15, 21, 907, DateTimeKind.Local).AddTicks(6723),
                            Description = "A standard health check for Koi fish to monitor their overall well-being and prevent diseases.",
                            IsDeleted = false,
                            Name = "Health Check",
                            ServiceType = "Health"
                        },
                        new
                        {
                            Id = new Guid("fe3df183-1f42-4301-a1fb-35e6211c8816"),
                            ApplicableTo = "Koi Fish",
                            CreatedDate = new DateTime(2024, 10, 30, 20, 15, 21, 907, DateTimeKind.Local).AddTicks(6735),
                            Description = "Specialized feeding service for Koi fish, ensuring proper nutrition and dietary requirements.",
                            IsDeleted = false,
                            Name = "Feeding Service",
                            ServiceType = "Feeding"
                        },
                        new
                        {
                            Id = new Guid("75efc332-0e1b-4d35-a609-4897d83c173e"),
                            ApplicableTo = "Koi Fish",
                            CreatedDate = new DateTime(2024, 10, 30, 20, 15, 21, 907, DateTimeKind.Local).AddTicks(6742),
                            Description = "Testing water quality parameters to ensure a healthy environment for Koi.",
                            IsDeleted = false,
                            Name = "Water Quality Testing",
                            ServiceType = "Testing"
                        },
                        new
                        {
                            Id = new Guid("a5e47a8f-f6e1-4c7a-8955-4a928744f9bf"),
                            ApplicableTo = "Koi Fish",
                            CreatedDate = new DateTime(2024, 10, 30, 20, 15, 21, 907, DateTimeKind.Local).AddTicks(6746),
                            Description = "Treatment services for Koi suffering from fungal infections.",
                            IsDeleted = false,
                            Name = "Fungal Treatment",
                            ServiceType = "Treatment"
                        },
                        new
                        {
                            Id = new Guid("da91046c-71d1-429b-ade3-5e8ff9f701a6"),
                            ApplicableTo = "Koi Fish",
                            CreatedDate = new DateTime(2024, 10, 30, 20, 15, 21, 907, DateTimeKind.Local).AddTicks(6750),
                            Description = "Services to treat and prevent parasites in Koi fish.",
                            IsDeleted = false,
                            Name = "Parasite Treatment",
                            ServiceType = "Treatment"
                        },
                        new
                        {
                            Id = new Guid("82b86176-d076-4576-b0f3-60220ca3e5ba"),
                            ApplicableTo = "Ponds",
                            CreatedDate = new DateTime(2024, 10, 30, 20, 15, 21, 907, DateTimeKind.Local).AddTicks(6754),
                            Description = "Regular maintenance services for Koi ponds to ensure optimal conditions.",
                            IsDeleted = false,
                            Name = "Pond Maintenance",
                            ServiceType = "Maintenance"
                        },
                        new
                        {
                            Id = new Guid("3d3bb172-c3d0-4d0f-ac50-713708bc6498"),
                            ApplicableTo = "Koi Fish",
                            CreatedDate = new DateTime(2024, 10, 30, 20, 15, 21, 907, DateTimeKind.Local).AddTicks(6758),
                            Description = "Guidance and assistance in breeding Koi fish.",
                            IsDeleted = false,
                            Name = "Koi Breeding Assistance",
                            ServiceType = "Breeding"
                        },
                        new
                        {
                            Id = new Guid("15c55a94-06fb-4dac-8b32-7c1d7af085a3"),
                            ApplicableTo = "Koi Fish",
                            CreatedDate = new DateTime(2024, 10, 30, 20, 15, 21, 907, DateTimeKind.Local).AddTicks(6762),
                            Description = "Safe transportation services for Koi fish.",
                            IsDeleted = false,
                            Name = "Koi Transportation",
                            ServiceType = "Transportation"
                        },
                        new
                        {
                            Id = new Guid("fb21c5e6-5db5-4dab-99b1-9c5d51f0ab51"),
                            ApplicableTo = "Koi Fish",
                            CreatedDate = new DateTime(2024, 10, 30, 20, 15, 21, 907, DateTimeKind.Local).AddTicks(6766),
                            Description = "Emergency medical services for Koi in distress.",
                            IsDeleted = false,
                            Name = "Emergency Care",
                            ServiceType = "Emergency"
                        },
                        new
                        {
                            Id = new Guid("ca3801df-081c-4db5-a416-b04791797d92"),
                            ApplicableTo = "Koi Enthusiasts",
                            CreatedDate = new DateTime(2024, 10, 30, 20, 15, 21, 907, DateTimeKind.Local).AddTicks(6769),
                            Description = "Workshops on Koi care and pond management.",
                            IsDeleted = false,
                            Name = "Educational Workshops",
                            ServiceType = "Education"
                        });
                });

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4feb4940-94dc-4aed-b580-ee116b668704"),
                            Address = "123 Main St",
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(5574),
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@gmail.com",
                            FullName = "Admin",
                            IsDeleted = false,
                            PasswordHash = "4d50906302527a2929fcb8cc7fc791f7f7af387388b503b4c6354b72039ba8ee",
                            PhoneNumber = "123456789",
                            ProfilePictureUrl = "User/0c08ff89-61a7-4b57-9c1d-ac6f3c57907b_Screenshot 2024-01-17 155826.png",
                            Username = "Admin",
                            role = 1
                        },
                        new
                        {
                            Id = new Guid("b59d5d37-53d8-4cb6-98ed-520f49eafa73"),
                            Address = "123 Main St",
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(5880),
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "manager@gmail.com",
                            FullName = "Manager",
                            IsDeleted = false,
                            PasswordHash = "4d50906302527a2929fcb8cc7fc791f7f7af387388b503b4c6354b72039ba8ee",
                            PhoneNumber = "123456789",
                            Username = "Manager",
                            role = 2
                        },
                        new
                        {
                            Id = new Guid("1dac24c4-08e2-4612-84dc-7c8960e483ea"),
                            Address = "123 Main St",
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(5928),
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "veterinarian1@gmail.com",
                            FullName = "Veterinarian_1",
                            IsDeleted = false,
                            PasswordHash = "4d50906302527a2929fcb8cc7fc791f7f7af387388b503b4c6354b72039ba8ee",
                            PhoneNumber = "123456789",
                            ProfilePictureUrl = "User/0c08ff89-61a7-4b57-9c1d-ac6f3c57907b_Screenshot 2024-01-17 155826.png",
                            Username = "Veterinarian_1",
                            role = 3
                        },
                        new
                        {
                            Id = new Guid("2430f703-cb67-4225-bb7e-c9abe5803b8a"),
                            Address = "123 Main St",
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6009),
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "veterinarian2@gmail.com",
                            FullName = "Veterinarian_2",
                            IsDeleted = false,
                            PasswordHash = "4d50906302527a2929fcb8cc7fc791f7f7af387388b503b4c6354b72039ba8ee",
                            PhoneNumber = "123456789",
                            ProfilePictureUrl = "User/0c08ff89-61a7-4b57-9c1d-ac6f3c57907b_Screenshot 2024-01-17 155826.png",
                            Username = "Veterinarian_2",
                            role = 3
                        },
                        new
                        {
                            Id = new Guid("2430f703-cb67-4225-bb7e-c9abe5803b8c"),
                            Address = "123 Main St",
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6036),
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "veterinarian2@gmail.com",
                            FullName = "Veterinarian_3",
                            IsDeleted = false,
                            PasswordHash = "4d50906302527a2929fcb8cc7fc791f7f7af387388b503b4c6354b72039ba8ee",
                            PhoneNumber = "123456789",
                            ProfilePictureUrl = "User/0c08ff89-61a7-4b57-9c1d-ac6f3c57907b_Screenshot 2024-01-17 155826.png",
                            Username = "Veterinarian_3",
                            role = 3
                        },
                        new
                        {
                            Id = new Guid("2430f703-cb67-4225-bb7e-c9abe5803b8d"),
                            Address = "123 Main St",
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6060),
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "veterinarian2@gmail.com",
                            FullName = "Veterinarian_4",
                            IsDeleted = false,
                            PasswordHash = "4d50906302527a2929fcb8cc7fc791f7f7af387388b503b4c6354b72039ba8ee",
                            PhoneNumber = "123456789",
                            ProfilePictureUrl = "User/0c08ff89-61a7-4b57-9c1d-ac6f3c57907b_Screenshot 2024-01-17 155826.png",
                            Username = "Veterinarian_4",
                            role = 3
                        },
                        new
                        {
                            Id = new Guid("5f28fcb6-675b-4f97-a925-01ac8c68b5ac"),
                            Address = "123 Main St",
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6083),
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "staff1@gmail.com",
                            FullName = "Staff_1",
                            IsDeleted = false,
                            PasswordHash = "4d50906302527a2929fcb8cc7fc791f7f7af387388b503b4c6354b72039ba8ee",
                            PhoneNumber = "123456789",
                            Username = "Staff_1",
                            role = 4
                        },
                        new
                        {
                            Id = new Guid("0d1fbbab-a175-4d90-8291-d5d96ebb9359"),
                            Address = "123 Main St",
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6107),
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "staff2@gmail.com",
                            FullName = "Staff_2",
                            IsDeleted = false,
                            PasswordHash = "4d50906302527a2929fcb8cc7fc791f7f7af387388b503b4c6354b72039ba8ee",
                            PhoneNumber = "123456789",
                            Username = "Staff_2",
                            role = 4
                        },
                        new
                        {
                            Id = new Guid("dd0e9f37-d587-401d-932e-7f098eb60b3e"),
                            Address = "123 Main St",
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6130),
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "customer1@gmail.com",
                            FullName = "Gia Phuc",
                            IsDeleted = false,
                            PasswordHash = "655b64170e5393b4fe019343b7178da6bcc726e1661582f80e48007e7b43c315",
                            PhoneNumber = "123456789",
                            ProfilePictureUrl = "User/0c08ff89-61a7-4b57-9c1d-ac6f3c57907b_Screenshot 2024-01-17 155826.png",
                            Username = "Cubin2003",
                            role = 5
                        },
                        new
                        {
                            Id = new Guid("bca84e29-de4d-475b-a3ad-a02e937efa14"),
                            Address = "123 Main St",
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6159),
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "customer2@gmail.com",
                            FullName = "Customer_2",
                            IsDeleted = false,
                            PasswordHash = "4d50906302527a2929fcb8cc7fc791f7f7af387388b503b4c6354b72039ba8ee",
                            PhoneNumber = "123456789",
                            Username = "Customer_2",
                            role = 5
                        },
                        new
                        {
                            Id = new Guid("45a9dc1c-fb8a-4607-9a7e-d6b1359384d7"),
                            Address = "123 Main St",
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6183),
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "customer3@gmail.com",
                            FullName = "Customer_3",
                            IsDeleted = false,
                            PasswordHash = "4d50906302527a2929fcb8cc7fc791f7f7af387388b503b4c6354b72039ba8ee",
                            PhoneNumber = "123456789",
                            Username = "Customer_3",
                            role = 5
                        },
                        new
                        {
                            Id = new Guid("d13e5c69-8d8a-4b67-b378-0e2de003816b"),
                            Address = "456 Elm St",
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(6206),
                            DateOfBirth = new DateTime(1992, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "customer4@gmail.com",
                            FullName = "Customer_4",
                            IsDeleted = false,
                            PasswordHash = "4d50906302527a2929fcb8cc7fc791f7f7af387388b503b4c6354b72039ba8ee",
                            PhoneNumber = "987654321",
                            Username = "Customer_4",
                            role = 5
                        });
                });

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.Veterinarian", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ConsultationFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Qualifications")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Veterinarian", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d59b53f6-7bc4-4af7-b5f5-438e16b75dd4"),
                            ConsultationFee = 0m,
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(7213),
                            IsDeleted = false,
                            LicenseNumber = "VN123456",
                            Qualifications = "Doctor of Veterinary Medicine (DVM)",
                            Specialty = "Aquatic Veterinary Medicine",
                            UserId = new Guid("1dac24c4-08e2-4612-84dc-7c8960e483ea")
                        },
                        new
                        {
                            Id = new Guid("21a15a4f-32f5-4d45-a056-f0d61f384e1b"),
                            ConsultationFee = 0m,
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(7220),
                            IsDeleted = false,
                            LicenseNumber = "VN789012",
                            Qualifications = "PhD in Veterinary Science",
                            Specialty = "Fish Surgery",
                            UserId = new Guid("2430f703-cb67-4225-bb7e-c9abe5803b8a")
                        },
                        new
                        {
                            Id = new Guid("21a15a4f-32f5-4d45-a056-f0d61f384e1c"),
                            ConsultationFee = 0m,
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(7224),
                            IsDeleted = false,
                            LicenseNumber = "VN789013",
                            Qualifications = "PhD in Veterinary Science",
                            Specialty = "Fish Surgery",
                            UserId = new Guid("2430f703-cb67-4225-bb7e-c9abe5803b8c")
                        },
                        new
                        {
                            Id = new Guid("21a15a4f-32f5-4d45-a056-f0d61f384e1d"),
                            ConsultationFee = 0m,
                            CreatedDate = new DateTime(2024, 10, 30, 13, 15, 21, 907, DateTimeKind.Utc).AddTicks(7228),
                            IsDeleted = false,
                            LicenseNumber = "VN789014",
                            Qualifications = "PhD in Veterinary Science",
                            Specialty = "Fish Surgery",
                            UserId = new Guid("2430f703-cb67-4225-bb7e-c9abe5803b8d")
                        });
                });

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.VeterinarianSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<Guid>("VeterinarianId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VeterinarianId");

                    b.ToTable("VeterinarianSchedule", (string)null);
                });

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.Appointment", b =>
                {
                    b.HasOne("KoiFarmShop.Domain.Entities.ComboService", "ComboService")
                        .WithMany()
                        .HasForeignKey("ComboServiceId");

                    b.HasOne("KoiFarmShop.Domain.Entities.User", "Customer")
                        .WithMany("Appointments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoiFarmShop.Domain.Entities.Pet", "Pet")
                        .WithMany("Appointments")
                        .HasForeignKey("PetId");

                    b.HasOne("KoiFarmShop.Domain.Entities.PetService", "PetService")
                        .WithMany()
                        .HasForeignKey("PetServiceId");

                    b.Navigation("ComboService");

                    b.Navigation("Customer");

                    b.Navigation("Pet");

                    b.Navigation("PetService");
                });

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.AppointmentVeterinarian", b =>
                {
                    b.HasOne("KoiFarmShop.Domain.Entities.Appointment", "Appointment")
                        .WithMany("AppointmentVeterinarians")
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KoiFarmShop.Domain.Entities.User", "Veterinarian")
                        .WithMany("AppointmentVeterinarians")
                        .HasForeignKey("VeterinarianId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Appointment");

                    b.Navigation("Veterinarian");
                });

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.ComboServiceItem", b =>
                {
                    b.HasOne("KoiFarmShop.Domain.Entities.ComboService", "ComboService")
                        .WithMany("ComboServiceItems")
                        .HasForeignKey("ComboServiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KoiFarmShop.Domain.Entities.PetService", "PetService")
                        .WithMany("ComboServiceItems")
                        .HasForeignKey("PetServiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ComboService");

                    b.Navigation("PetService");
                });

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.Pet", b =>
                {
                    b.HasOne("KoiFarmShop.Domain.Entities.User", "Owner")
                        .WithMany("Pets")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.PetService", b =>
                {
                    b.HasOne("KoiFarmShop.Domain.Entities.PetServiceCategory", "PetServiceCategory")
                        .WithMany("PetServices")
                        .HasForeignKey("PetServiceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PetServiceCategory");
                });

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.Veterinarian", b =>
                {
                    b.HasOne("KoiFarmShop.Domain.Entities.User", "User")
                        .WithOne("Veterinarian")
                        .HasForeignKey("KoiFarmShop.Domain.Entities.Veterinarian", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.VeterinarianSchedule", b =>
                {
                    b.HasOne("KoiFarmShop.Domain.Entities.Veterinarian", "Veterinarian")
                        .WithMany("VeterinarianSchedules")
                        .HasForeignKey("VeterinarianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veterinarian");
                });

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.Appointment", b =>
                {
                    b.Navigation("AppointmentVeterinarians");
                });

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.ComboService", b =>
                {
                    b.Navigation("ComboServiceItems");
                });

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.Pet", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.PetService", b =>
                {
                    b.Navigation("ComboServiceItems");
                });

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.PetServiceCategory", b =>
                {
                    b.Navigation("PetServices");
                });

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.User", b =>
                {
                    b.Navigation("AppointmentVeterinarians");

                    b.Navigation("Appointments");

                    b.Navigation("Pets");

                    b.Navigation("Veterinarian")
                        .IsRequired();
                });

            modelBuilder.Entity("KoiFarmShop.Domain.Entities.Veterinarian", b =>
                {
                    b.Navigation("VeterinarianSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
